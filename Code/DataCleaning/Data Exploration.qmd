---
title: "Data Exploration"
author: "Marliese Baer"
format: html
editor: visual
---

## Set Up

```{r}
rm(list = ls())
library(tidyverse)
library(here)
library(ggfortify)
library(readr)
library(lubridate)
```

## Pull in original data

```{r}
CM <- read_csv(here("Data", "Processed Data", "CM_clean.csv"),
               col_types = cols(
                 Date = col_date(),
                 Species = col_factor(),
                 Duration = col_double(),
                 n_individ = col_double(),
                 total_n = col_double(),
                 duration_min_day = col_double(),
                 year = col_double(),
                 month = col_factor(),
                 wday = col_factor(),
                 individ_per_min = col_double(),
                 individ_per_hour = col_double(),
                 week = col_factor()
               ))
#GM <- read.csv(here("Data", "Processed Data", "GM_clean.csv"))
#HR <- read.csv(here("Data", "Processed Data", "HR_clean.csv"))

```

## Cape May

```{r}
## for all spp?

CM <- CM |>
  mutate(Decade = 
           case_when(year >= 1976 & year <= 1985 ~ "1976 - 1985",
                     year >= 1986 & year <= 1995 ~ "1986 - 1995",
                     year >= 1996 & year <= 2005 ~ "1996 - 2005",
                     year >= 2006 & year <= 2015 ~ "2006 - 2015",
                     year >= 2016 ~ "2016 - present")) |>
  mutate(Decade = as.factor(Decade)) |>
  relocate(Decade, everything ())
  
#relocate() moves new variable to the front of df (be first column)

ggplot(data = CM, aes(x = week,
                         y = individ_per_hour, group = Decade)) +
  geom_point() +
  geom_smooth(aes(colour = Decade)) +
  facet_wrap(~Species)

ggplot(data = CM, aes(x = week,
                         y = individ_per_hour, group = Decade)) +
  geom_smooth(aes(colour = Decade)) +
  facet_wrap(~Species)

#make df for each species

CM_RT <- CM |>
  filter(Species == "RT")

CM_SS <- CM |>
  filter(Species == "SS")

CM_CH <- CM |>
  filter(Species == "CH")

CM_PG <- CM |>
  filter(Species == "PG")

CM_AK <- CM |>
  filter(Species == "AK")

#boxplot (x = week, y = num_individ_per_week_per_hour??), connect the medians/means to see trends

ggplot(data = CM_RT, aes(x = week,
                      y = individ_per_hour)) +
  geom_boxplot()


#split data into 10 year periods

CM_RT <- CM_RT |>
  mutate(Decade = 
           case_when(year >= 1976 & year <= 1985 ~ "1976 - 1985",
                     year >= 1986 & year <= 1995 ~ "1986 - 1995",
                     year >= 1996 & year <= 2005 ~ "1996 - 2005",
                     year >= 2006 & year <= 2015 ~ "2006 - 2015",
                     year >= 2016 ~ "2016 - present")) |>
  mutate(Decade = as.factor(Decade))

ggplot(data = CM_RT, aes(x = week,
                         y = individ_per_hour, group = Decade)) +
  geom_point() +
  geom_smooth(aes(colour = Decade))

ggplot(data = CM_RT, aes(x = week,
                         y = individ_per_hour, group = Decade)) +
  geom_smooth(aes(colour = Decade))
#what does geom_smooth actually do when used on its own?

CM_RT |>
  group_by(year) |>
  arrange(desc(year))


##split data into 5 year periods?

#total values per year

CM_RT |>
  group_by(year) |>
  summarise(total_n_per_year = sum(n_individ))

#other exploratory plots?
  
```

to address outliers

1) isolate outliers and see if reasonable
- if an order of mag more than another point (need justification for throwing away point)
2) want to be conservative, and bc not involved in all data collection
- take top and bottom 3% of points and run without them to see if there is a different


1) make plots above. consult w erika to ask about other plots??
2) repeat cleaning process for other datasets!!!



```{r}
CM |>
  mutate(Date = dmy(Date))
|>
  mutate(n_spp = as.double(n_spp)) |>
  mutate(Species = as.factor(Species)) |>
  mutate(Duration = as.double(`Duration (min)`)) |>
  select(Date, Species, n_spp, total_n, duration_min_day)

try |>
  group_by(Date, Species) |>
  summarise(spp_per_min = total_n/duration_min_day)

##why multiple spp_per_min values for each date and spp?

try |>
  mutate(Date = dmy(`Date `)) |>
  mutate(n_spp = as.double(n_spp)) |>
  mutate(Species = as.factor(Species)) |>
  mutate(Duration = as.double(`Duration (min)`))



Cape_may_clean <- Cape_May_2 |>
  pivot_longer(c(6:30), names_to = "Species_age",
               values_to = "n_spp") |>
  separate(Species_age, c("Species", "Age"),
           sep = " ") |>
  filter(Species == "RT" | Species == "SS" | Species == "CH" | Species == "AK" | Species == "PG") |>
  mutate(Date = dmy(`Date `)) |>
  mutate(n_spp = as.double(n_spp)) |>
  mutate(Species = as.factor(Species)) |>
  group_by(Date, Species) |>
  mutate(total_n = sum(n_spp)) |>
  mutate(Duration = as.double(`Duration (min)`))|>
  group_by(Date, Species) |>
  mutate(duration_min_day = sum(Duration)) |>
  select(Date, everything())


####after this point, I am doing work that should be in 'Data Exploration.qmd' but isn't because for some reason the date is back to a chr instead of date

try <- Cape_may_clean |>
  select(Date, Species, n_spp, total_n, duration_min_day) |>
  group_by(Date, Species) |>
  summarise(spp_per_min = mean(total_n/duration_min_day))

ggplot(data = try, aes(x = Date, y = spp_per_min)) +
  geom_point(aes(colour = Date)) +
  facet_wrap(~Species)

try2 <- Cape_may_clean |>
  select(Date, Species, n_spp, total_n, duration_min_day) |>
  group_by(Date, Species) |>
  mutate(spp_per_min = total_n/duration_min_day)

##add to below

Cape_may_clean$year <- lubridate::year(Cape_may_clean$Date)
Cape_may_clean$month <- lubridate::month(Cape_may_clean$Date)
Cape_may_clean$julian <- lubridate::yday(Cape_may_clean$Date) 

##when I run this code separately (not as a part of a pipe), it works. Why can't work in pipe

#need to convert to 3 columns: month, day, and year.
#plot per spp, spp_per_min for each month and year - so group by year and then plot x = month and y = spp_per_min

##julian date = x, spp/min = y, color = year, facet = spp <- spaghetti plot?

ggplot(data = try2, aes(x = ))

Cape_may_clean |>
  select(Date, Species, n_spp, total_n, duration_min_day) |>
  filter(Species == "RT") |>
  group_by(Date) |>
  summarise(spp_per_min = total_n/duration_min_day)

```

## Goshutes

## Hawk Ridge
