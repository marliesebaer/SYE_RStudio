---
title: "Data Exploration"
author: "Marliese Baer"
format: html
editor: visual
---

## Set Up

```{r}
#| warning: false

rm(list = ls())
library(tidyverse)
library(here)
library(ggfortify)
library(readr)
library(lubridate)
```

## Pull in original data

```{r}
CM <- read_csv(here("Data", "Processed Data", "CM_clean.csv"),
               col_types = cols(
                 Date = col_date(),
                 Species = col_factor(),
                 Duration = col_double(),
                 n_individ = col_double(),
                 total_n = col_double(),
                 duration_min_day = col_double(),
                 year = col_double(),
                 month = col_factor(),
                 wday = col_factor(),
                 individ_per_min = col_double(),
                 individ_per_hour = col_double(),
                 week = col_factor()
               ))

GM <- read_csv(here("Data", "Processed Data", "GM_clean.csv"),
               col_types = cols(
                 Date = col_date(),
                 Species = col_factor(),
                 Duration = col_double(),
                 n_individ = col_double(),
                 total_n = col_double(),
                 duration_min_day = col_double(),
                 year = col_double(),
                 month = col_factor(),
                 wday = col_factor(),
                 individ_per_min = col_double(),
                 individ_per_hour = col_double(),
                 week = col_factor()
               ))


HR <- read_csv(here("Data", "Processed Data", "HR_clean.csv"),
               col_types = cols(
                 Date = col_date(),
                 Species = col_factor(),
                 Duration = col_double(),
                 n_individ = col_double(),
                 total_n = col_double(),
                 duration_min_day = col_double(),
                 year = col_double(),
                 month = col_factor(),
                 wday = col_factor(),
                 individ_per_min = col_double(),
                 individ_per_hour = col_double(),
                 week = col_factor()
               ))

```

## Cape May

### All species over time

```{r}
CM |>
  group_by(year) |>
  arrange(desc(year))

CM <- CM |>
  mutate(Decade = 
           case_when(year >= 1976 & year <= 1985 ~ "1976 - 1985",
                     year >= 1986 & year <= 1995 ~ "1986 - 1995",
                     year >= 1996 & year <= 2005 ~ "1996 - 2005",
                     year >= 2006 & year <= 2015 ~ "2006 - 2015",
                     year >= 2016 ~ "2016 - present")) |>
  mutate(Decade = as.factor(Decade)) |>
  mutate(location = "Cape May") |>
  relocate(Decade, location, everything ())

CM <- CM |>
  group_by(year) |>
  mutate(total_individ_per_year = sum(n_individ))

CM <- CM |>
  group_by(week) |>
  mutate(total_individ_per_week = sum(n_individ))

  
#relocate() moves new variable to the front of df (be first column)

ggplot(data = CM, aes(x = week,
                         y = individ_per_hour, group = Decade)) +
  geom_point() +
  geom_smooth(aes(colour = Decade)) +
  facet_wrap(~Species)

ggplot(data = CM, aes(x = week,
                         y = individ_per_hour, group = Decade)) +
  geom_smooth(aes(colour = Decade)) +
  facet_wrap(~Species)
```


### need to skip this right now

```{r}
summary(CM_RT$individ_per_hour)

CM |>
  group_by(week) |>
  summarise(try = mean(individ_per_hour)) |>
  arrange(desc(try))

finding_inf <- CM |>
  filter(week == 41)

finding_inf |>
  arrange(desc(individ_per_hour))
 
```

make df with one row per day

```{r}
CM |>
  group_by(Date)
```

finding odd Duration values

```{r}

table(Cape_May$`Duration (min)`)


Cape_May$Duration<-as.numeric(Cape_May$`Duration (min)`)

sort(Cape_May$Duration, decreasing = TRUE)

sort(CM$Duration, decreasing = TRUE)

Cape_May |>
  filter(Duration >700)

CM |>
  filter(Duration == 705)

```

```{r}

##try the below variables  -> if going to keep, name them better so they are more informative

CM <- CM |>
  group_by(year, Species, Decade) |>
  mutate(total_individ_year_spp = sum(n_individ))

CM <- CM |>
  group_by(week, Species, Decade) |>
  mutate(total_individ_week_spp = sum(n_individ))

##plot

ggplot(data = CM, aes(x = week, y = total_individ_week_spp, group = Decade)) +
  geom_point() +
  geom_smooth(aes(colour = Decade)) +
  facet_wrap(~Species)

ggplot(data = CM, aes(x = year, y = total_individ_year_spp, group = Decade)) +
  geom_point() +
  geom_smooth(aes(colour = Decade)) +
  facet_wrap(~Species)

```

### dfs for each spp

```{r}
CM_RT <- CM |>
  filter(Species == "RT")

CM_SS <- CM |>
  filter(Species == "SS")

CM_CH <- CM |>
  filter(Species == "CH")

CM_PG <- CM |>
  filter(Species == "PG")

CM_AK <- CM |>
  filter(Species == "AK")
```

### NENHC figures

```{r}
plot_CM_RT <- ggplot(data = CM_RT, aes(x = week, y = log(individ_per_hour+1), group = Decade)) +
  geom_point() +
  geom_smooth(aes(colour = Decade), show.legend = FALSE, size = 2) +
  labs(y = "RTHA observed per hour effort") +
  theme(panel.background = element_rect(fill = 'lightgrey')) +
  theme(axis.title = element_text(size = 24)) +   
  theme(axis.text = element_text(size = 18)) +
  theme_bw()

plot_CM_SS <- ggplot(data = CM_SS, aes(x = week, y = log(individ_per_hour+1), group = Decade)) +
  geom_point() +
  geom_smooth(aes(colour = Decade), show.legend = FALSE, size = 2) +
  labs(y = "SSHA observed per hour effort") +
  theme(panel.background = element_rect(fill = 'lightgrey')) +
  theme(axis.title = element_text(size = 24)) +   
  theme(axis.text = element_text(size = 18)) +
  theme_bw()

plot_CM_CH <- ggplot(data = CM_CH, aes(x = week, y = log(individ_per_hour+1), group = Decade)) +
  geom_point() +
  geom_smooth(aes(colour = Decade), show.legend = FALSE, size = 2) +
  labs(y = "COHA observed per hour effort") +
  theme(panel.background = element_rect(fill = 'lightgrey'))  +
  theme(axis.title = element_text(size = 24)) +   
  theme(axis.text = element_text(size = 18)) +
  theme_bw()

plot_CM_AK <- ggplot(data = CM_AK, aes(x = week, y = log(individ_per_hour+1), group = Decade)) +
  geom_point() +
  geom_smooth(aes(colour = Decade), show.legend = FALSE, size = 2) +
  labs(y = "AMKE observed per hour effort") +
  theme(panel.background = element_rect(fill = 'lightgrey'))  +
  theme(axis.title = element_text(size = 24)) +   
  theme(axis.text = element_text(size = 18)) +
  theme_bw()

plot_CM_PG <- ggplot(data = CM_PG, aes(x = week, y = log(individ_per_hour+1), group = Decade)) +
  geom_point() +
  geom_smooth(aes(colour = Decade), size = 2) +
  labs(y = "PEFA observed per hour effort") +
  theme(panel.background = element_rect(fill = 'lightgrey'))  +
  theme(axis.title = element_text(size = 24)) +   
  theme(axis.text = element_text(size = 18)) +
  theme_bw()


```


Now that we have two plots, let's use a package called ggpubr that helps you to easily arrange the plots into a multi-panel figure. We'll call our object "fig1".

```{r}
library(ggpubr) #turns on the package we need. I usually have this code at the top of my page

CM_fig1 <- ggarrange(plot_CM_RT, plot_CM_SS, plot_CM_CH, plot_CM_AK, plot_CM_PG,
          labels = "Cape May Fall Raptor Migration Observation over Time",
          vjust = 0,
          ncol = 3, nrow = 2,
          legend = "bottom", common.legend = TRUE) 

ggsave(here("Outputs", "CM_fig1.png"), device = "png", height = 8, width = 13) 

```




### boxplot and dotplot for each spp individually

```{r}
ggplot(data = CM_RT, aes(x = week,
                      y = log(individ_per_hour+1))) +
  geom_boxplot()

ggplot(data = CM_RT, aes(x = week, y = log(individ_per_hour+1), group = Decade)) +
  geom_point() +
  geom_smooth(aes(colour = Decade), show.legend = FALSE) +
  labs(y = "RTHA observed per hour effort") +
  theme_minimal()

ggplot(data = CM_RT, aes(x = week, y = individ_per_hour, group = Decade)) +
  geom_smooth(aes(colour = Decade))

##

ggplot(data = CM_SS, aes(x = week,
                      y = log(individ_per_hour+1))) +
  geom_boxplot()

ggplot(data = CM_SS, aes(x = week, y = individ_per_hour, group = Decade)) +
  geom_point() +
  geom_smooth(aes(colour = Decade))

##

ggplot(data = CM_CH, aes(x = week,
                      y = log(individ_per_hour+1))) +
  geom_boxplot()

ggplot(data = CM_CH, aes(x = week, y = individ_per_hour, group = Decade)) +
  geom_point() +
  geom_smooth(aes(colour = Decade))

##

ggplot(data = CM_AK, aes(x = week,
                      y = log(individ_per_hour+1))) +
  geom_boxplot()

ggplot(data = CM_AK, aes(x = week, y = individ_per_hour, group = Decade)) +
  geom_point() +
  geom_smooth(aes(colour = Decade))

##

ggplot(data = CM_PG, aes(x = week,
                      y = log(individ_per_hour+1))) +
  geom_boxplot()

ggplot(data = CM_PG, aes(x = week, y = individ_per_hour, group = Decade)) +
  geom_point() +
  geom_smooth(aes(colour = Decade))
```

### for RT

boxplot (x = week, y = num_individ_per_week_per_hour??), connect the medians/means to see trends

```{r}
ggplot(data = CM_RT, aes(x = week,
                      y = log(individ_per_hour+1))) +
  geom_boxplot()
```

individual per hour per week by decade

```{r}
ggplot(data = CM_RT, aes(x = week,
                         y = individ_per_hour, group = Decade)) +
  geom_point() +
  geom_smooth(aes(colour = Decade))

ggplot(data = CM_RT, aes(x = week,
                         y = individ_per_hour, group = Decade)) +
  geom_smooth(aes(colour = Decade))

#what does geom_smooth actually do when used on its own?
```

Split data into 5 year periods?

```{r}

```

total values per year

```{r}
CM_RT |>
  group_by(year) |>
  summarise(total_n_per_year = sum(n_individ))
  
```

other explanatory plots?

```{r}

```

to address outliers

1)  isolate outliers and see if reasonable

-   if an order of mag more than another point (need justification for throwing away point)

2)  want to be conservative, and bc not involved in all data collection

-   take top and bottom 3% of points and run without them to see if there is a different

1)  make plots above. consult w erika to ask about other plots??
2)  repeat cleaning process for other datasets!!!

## Goshutes

```{r}
GM |>
  group_by(year) |>
  arrange((year))

GM |>
  group_by(year) |>
  summarise(try = mean(year))

## start 1983, end 2023
## no 2020

GM <- GM |>
  mutate(Decade = 
           case_when(year >= 1983 & year <= 1992 ~ "1983 - 1992",
                     year >= 1993 & year <= 2002 ~ "1993 - 2002",
                     year >= 2003 & year <= 2012 ~ "2003 - 2013",
                     year >= 2013  ~ "2013 - present")) |>
  mutate(Decade = as.factor(Decade)) |>
  mutate(location = "Goshute Mtns") |>
  relocate(Decade, location, everything ())

GM <- GM |>
  group_by(year) |>
  mutate(total_individ_per_year = sum(n_individ))

GM <- GM |>
  group_by(week) |>
  mutate(total_individ_per_week = sum(n_individ))
  
#relocate() moves new variable to the front of df (be first column)

ggplot(data = GM, aes(x = week,
                         y = individ_per_hour, group = Decade)) +
  geom_point() +
  geom_smooth(aes(colour = Decade)) +
  facet_wrap(~Species)

ggplot(data = GM, aes(x = week,
                         y = individ_per_hour, group = Decade)) +
  geom_smooth(aes(colour = Decade)) +
  facet_wrap(~Species)
```

### dfs for each spp

```{r}
GM_RT <- GM |>
  filter(Species == "RT")

GM_SS <- GM |>
  filter(Species == "SS")

GM_CH <- GM |>
  filter(Species == "CH")

GM_PG <- GM |>
  filter(Species == "PG")

GM_AK <- GM |>
  filter(Species == "AK")
```

### NENHC figures

```{r}
plot_GM_RT <- ggplot(data = GM_RT, aes(x = week, y = log(individ_per_hour+1), group = Decade)) +
  geom_point() +
  geom_smooth(aes(colour = Decade), show.legend = FALSE, size = 2) +
  labs(y = "RTHA observed per hour effort") +
  theme(panel.background = element_rect(fill = 'lightgrey')) +
  theme(axis.title = element_text(size = 24)) +   
  theme(axis.text = element_text(size = 18)) +
  theme_bw()

plot_GM_SS <- ggplot(data = GM_SS, aes(x = week, y = log(individ_per_hour+1), group = Decade)) +
  geom_point() +
  geom_smooth(aes(colour = Decade), show.legend = FALSE, size = 2) +
  labs(y = "SSHA observed per hour effort") +
  theme(panel.background = element_rect(fill = 'lightgrey')) +
  theme(axis.title = element_text(size = 24)) +   
  theme(axis.text = element_text(size = 18)) +
  theme_bw()

plot_GM_CH <- ggplot(data = GM_CH, aes(x = week, y = log(individ_per_hour+1), group = Decade)) +
  geom_point() +
  geom_smooth(aes(colour = Decade), show.legend = FALSE, size = 2) +
  labs(y = "COHA observed per hour effort") +
  theme(panel.background = element_rect(fill = 'lightgrey')) +
  theme(axis.title = element_text(size = 24)) +   
  theme(axis.text = element_text(size = 18)) +
  theme_bw()

plot_GM_AK <- ggplot(data = GM_AK, aes(x = week, y = log(individ_per_hour+1), group = Decade)) +
  geom_point() +
  geom_smooth(aes(colour = Decade), show.legend = FALSE, size = 2) +
  labs(y = "AMKE observed per hour effort") +
  theme(panel.background = element_rect(fill = 'lightgrey')) +
  theme(axis.title = element_text(size = 24)) +   
  theme(axis.text = element_text(size = 18)) +
  theme_bw()

plot_GM_PG <- ggplot(data = GM_PG, aes(x = week, y = log(individ_per_hour+1), group = Decade)) +
  geom_point() +
  geom_smooth(aes(colour = Decade), size = 2) +
  labs(y = "PEFA observed per hour effort") +
  theme(panel.background = element_rect(fill = 'lightgrey')) +
  theme(axis.title = element_text(size = 24)) +   
  theme(axis.text = element_text(size = 18)) +
  theme_bw()


```


Now that we have two plots, let's use a package called ggpubr that helps you to easily arrange the plots into a multi-panel figure. We'll call our object "fig1".

```{r}
library(ggpubr) #turns on the package we need. I usually have this code at the top of my page

GM_fig1 <- ggarrange(plot_GM_RT, plot_GM_SS, plot_GM_CH, plot_GM_AK, plot_GM_PG,
          labels = "Goshute Mtns Fall Raptor Migration Observation over Time",
          vjust = 0,
          ncol = 3, nrow = 2,
          legend = "bottom", common.legend = TRUE) 

ggsave(here("Outputs", "GM_fig1.png"), device = "png", height = 8, width = 13) 

```


### boxplot and dotplot for each spp individually

```{r}
ggplot(data = GM_RT, aes(x = week,
                      y = log(individ_per_hour+1))) +
  geom_boxplot()

ggplot(data = GM_RT, aes(x = week, y = individ_per_hour, group = Decade)) +
  geom_point() +
  geom_smooth(aes(colour = Decade))

##

ggplot(data = GM_SS, aes(x = week,
                      y = log(individ_per_hour+1))) +
  geom_boxplot()

ggplot(data = GM_SS, aes(x = week, y = individ_per_hour, group = Decade)) +
  geom_point() +
  geom_smooth(aes(colour = Decade))

##

ggplot(data = GM_CH, aes(x = week,
                      y = log(individ_per_hour+1))) +
  geom_boxplot()

ggplot(data = GM_CH, aes(x = week, y = individ_per_hour, group = Decade)) +
  geom_point() +
  geom_smooth(aes(colour = Decade))

##

ggplot(data = GM_AK, aes(x = week,
                      y = log(individ_per_hour+1))) +
  geom_boxplot()

ggplot(data = GM_AK, aes(x = week, y = individ_per_hour, group = Decade)) +
  geom_point() +
  geom_smooth(aes(colour = Decade))

##

ggplot(data = GM_PG, aes(x = week,
                      y = log(individ_per_hour+1))) +
  geom_boxplot()

ggplot(data = GM_PG, aes(x = week, y = individ_per_hour, group = Decade)) +
  geom_point() +
  geom_smooth(aes(colour = Decade))
```

## Hawk Ridge

okay, so the plots show negative values... ??

```{r}
HR |>
  group_by(year) |>
  arrange(desc(year))

HR |>
  group_by(year) |>
  summarise(try = mean(year))

##start 1971, end 2023

HR <- HR |>
  mutate(Decade = 
           case_when(year >= 1971 & year <= 1980 ~ "1971 - 1980",
                     year >= 1981 & year <= 1990 ~ "1981 - 1990",
                     year >= 1991 & year <= 2000 ~ "1991 - 2000",
                     year >= 2001 & year <= 2010 ~ "2001 - 2010",
                     year >= 2011 & year <= 2020 ~ "2011 - 2020",
                     year >= 2021 ~ "2021 - present")) |>
  mutate(Decade = as.factor(Decade)) |>
  mutate(location = "Hawk Ridge") |>
  relocate(Decade, location, everything ())

HR <- HR |>
  group_by(year) |>
  mutate(total_individ_per_year = sum(n_individ))

HR <- HR |>
  group_by(week) |>
  mutate(total_individ_per_week = sum(n_individ))
  
#relocate() moves new variable to the front of df (be first column)

ggplot(data = HR, aes(x = week,
                         y = individ_per_hour, group = Decade)) +
  geom_point() +
  geom_smooth(aes(colour = Decade)) +
  facet_wrap(~Species)

##consider using log transformation (refer to CM_RT boxplot graph made)

ggplot(data = HR, aes(x = week,
                         y = individ_per_hour, group = Decade)) +
  geom_smooth(aes(colour = Decade)) +
  facet_wrap(~Species)
```

### dfs for each spp

```{r}
HR_RT <- HR |>
  filter(Species == "RT")

HR_SS <- HR |>
  filter(Species == "SS")

HR_CH <- HR |>
  filter(Species == "CH")

HR_PG <- HR |>
  filter(Species == "PG")

HR_AK <- HR |>
  filter(Species == "AK")
```

### NENHC figures

```{r}
plot_HR_RT <- ggplot(data = HR_RT, aes(x = week, y = log(individ_per_hour+1), group = Decade)) +
  geom_point() +
  geom_smooth(aes(colour = Decade), show.legend = FALSE, size = 2) +
  labs(y = "RTHA observed per hour effort") +
  theme(panel.background = element_rect(fill = 'lightgrey')) +
  theme(axis.title = element_text(size = 24)) +   
  theme(axis.text = element_text(size = 18)) +
  theme_bw()

plot_HR_SS <- ggplot(data = HR_SS, aes(x = week, y = log(individ_per_hour+1), group = Decade)) +
  geom_point() +
  geom_smooth(aes(colour = Decade), show.legend = FALSE, size = 2) +
  labs(y = "SSHA observed per hour effort") +
  theme(panel.background = element_rect(fill = 'lightgrey')) +
  theme(axis.title = element_text(size = 24)) +   
  theme(axis.text = element_text(size = 18)) +
  theme_bw()

plot_HR_CH <- ggplot(data = HR_CH, aes(x = week, y = log(individ_per_hour+1), group = Decade)) +
  geom_point() +
  geom_smooth(aes(colour = Decade), show.legend = FALSE, size = 2) +
  labs(y = "COHA observed per hour effort") +
  theme(panel.background = element_rect(fill = 'lightgrey')) +
  theme(axis.title = element_text(size = 24)) +   
  theme(axis.text = element_text(size = 18)) +
  theme_bw()

plot_HR_AK <- ggplot(data = HR_AK, aes(x = week, y = log(individ_per_hour+1), group = Decade)) +
  geom_point() +
  geom_smooth(aes(colour = Decade), show.legend = FALSE, size = 2) +
  labs(y = "AMKE observed per hour effort") +
  theme(panel.background = element_rect(fill = 'lightgrey')) +
  theme(axis.title = element_text(size = 24)) +   
  theme(axis.text = element_text(size = 18)) +
  theme_bw()

plot_HR_PG <- ggplot(data = HR_PG, aes(x = week, y = log(individ_per_hour+1), group = Decade)) +
  geom_point() +
  geom_smooth(aes(colour = Decade), size = 2) +
  labs(y = "PEFA observed per hour effort") +
  theme(panel.background = element_rect(fill = 'lightgrey')) +
  theme(axis.title = element_text(size = 24)) +   
  theme(axis.text = element_text(size = 18)) +
  theme_bw()


```


Now that we have two plots, let's use a package called ggpubr that helps you to easily arrange the plots into a multi-panel figure. We'll call our object "fig1".

```{r}
library(ggpubr) #turns on the package we need. I usually have this code at the top of my page

HR_fig1 <- ggarrange(plot_HR_RT, plot_HR_SS, plot_HR_CH, plot_HR_AK, plot_HR_PG,
          labels = "Hawk Ridge Fall Raptor Migration Observation over Time",
          vjust = 0,
          ncol = 3, nrow = 2,
          legend = "bottom", common.legend = TRUE) 

ggsave(here("Outputs", "HR_fig1.png"), device = "png", height = 8, width = 13) 

```



### boxplot and dotplot for each spp individually

```{r}
ggplot(data = HR_RT, aes(x = week,
                      y = log(individ_per_hour+1))) +
  geom_boxplot()

ggplot(data = HR_RT, aes(x = week, y = individ_per_hour, group = Decade)) +
  geom_point() +
  geom_smooth(aes(colour = Decade))

ggplot(data = HR_RT, aes(x = week, y = individ_per_hour, group = Decade)) +
  geom_smooth(aes(x = week, yend = 0, y = individ_per_hour, colour = Decade))

##

ggplot(data = HR_SS, aes(x = week,
                      y = log(individ_per_hour+1))) +
  geom_boxplot()

ggplot(data = HR_SS, aes(x = week, y = individ_per_hour, group = Decade)) +
  geom_point() +
  geom_smooth(aes(colour = Decade))

##

ggplot(data = HR_CH, aes(x = week,
                      y = log(individ_per_hour+1))) +
  geom_boxplot()

ggplot(data = HR_CH, aes(x = week, y = individ_per_hour, group = Decade)) +
  geom_point() +
  geom_smooth(aes(colour = Decade))

##

ggplot(data = HR_AK, aes(x = week,
                      y = log(individ_per_hour+1))) +
  geom_boxplot()

ggplot(data = HR_AK, aes(x = week, y = individ_per_hour, group = Decade)) +
  geom_point() +
  geom_smooth(aes(colour = Decade))

##

ggplot(data = HR_PG, aes(x = week,
                      y = log(individ_per_hour+1))) +
  geom_boxplot()

ggplot(data = HR_PG, aes(x = week, y = individ_per_hour, group = Decade)) +
  geom_point() +
  geom_smooth(aes(colour = Decade))
```

## removing outliers to create more accurate graphs

```{r}

CM <- CM |> 
  filter(Duration > 0 & Duration < 1000)

HR <- HR |> 
  filter(Duration > 0 & Duration < 1000)

GM <- GM |> 
  filter(Duration > 0 & Duration < 1000)

#keep rows where duration is greater that 0

```
